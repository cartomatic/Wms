/*
 * This file contains an array of objects, each describing WMS driver settings applicable per served map (one manifold project file can have any number of the served maps)
 */
 
/*
 * Note: This file must be a valid json file
 * Note: Only multiline comments allowed
 */

/**
 * {List<Cartomatic.Manifold.WmsDriverSettings>}
 */
[
	{
		/*
		 * {String}
		 * Name of the map component this settings apply to; One project file can contain multiple map comps that can be served by the driver
		 */
		MapComponent: 'Map',
		
		/*
		 * {String}
		 * Spatial Reference System Identifier - EPSG int SRID identifier; manifold does not operate in epsg notation, so this needs to be specified manually
		 */
		SRID: 28992,
		
		/*
		 * {Bool}
		 * Whether or not all the map layers should be combined and served as one layer (named after the map)
		 * if true, the whole map acts as one layer and all the layers are served;
		 * useful for serving imagery composed off different rasters or scale dependant imagery, etc.
		 */
		CombineLayers: false,
		
		/*
		 * {Int}
		 * Collar size - used to improve rendering of vector data close to edges by adding additional collar around the image, and then cropping the output to the desired size
		 */
		CollarSize: 4,
		
		/*
		 * {Int}
		 * Size of the collar used whenever a label component is visible for given request; used to improve the rendering of labels so they do not get cut
		 */
		LabelCollarSize: 512,
		
		/*
		 * {Bool}
		 * Whether or not the layer opacity should be respected; if true, layers are rendered one by one and assembled back as one image;
		 * This of course makes things slower, but it is not possible to set manifold's map component background to transparent for rendering (still true in 8.0.29.0)
		 */
		RespectLayerOpacity: false,

		/*
		 * {Int}
		 * The rendering quality;
		 * if not provided a default render quality of 100 is used; applicability of this params varies between formats
		 */
		RenderQuality: 100,
		
		/*
		 * {Bool}
		 * Whether or not map component configured with this option ON should make its layers refresh the data for given bounding box or not.
		 * Only linked components are refreshed, other components are ignored. When using this option it is important to set manifold not to refresh linked
         * components on file open.
		 *
         * Note: Due to manifold inefficiencies with linked data refresh for postgis and further problems
         * with manifold dying on iis7/winServ2008 (not sure if the iis / os / manifold is the reason though)
         * customised fake linking is implemented - see AoiSettings for details
		 */
		AutoAoi: true,
		
		/*
		 * {Int}
		 * AOI data collar size expressed in pixels - by how many pixels should the AOI be extended when refreshing the data
		 * The size is translated to the map units
		 * May improve the rendering, especially when objects are labeled, and the automatic label overlap resolve is on
		 */
		AoiCollar: 128,

		/*
		 * {List<AoiSetting>}
		 * per component aoi settings; applicable only for the non-linked (fake linked) drawing components
		 */
		AoiSettings: [
			{
				/*
				 * {String}
				 * Name of a component
				 */
				Comp: 'Velden',
				
				/*
				 * {Cartomatic.Utils.Data.DataSourceCredentials}
				 * DataSource credentials
				 */
				DataSourceCredentials: {ServerHost: 'xxx\\MSSQLSERVER12', UserName: 'xxx', Pass: 'xxx', DataSourceType: 'SqlServer', DbName: 'xxx'},
				/*
				 * Postgis example
				 * {ServerHost: 'localhost', ServerPort: 5433, UserName: 'xxx', Pass: 'xxx', DataSourceType: 'PgSql', DbName: 'xxx'}
				 */
				
				/*
				 * {Bool}
				 * Whether or not geom objects should be read as binary. Basically this should speed up db reads, but
				 * on the other hand this data is added through object model calls and manifold object accessors are slow,
				 * so the overall performance is better when reading geoms as wkt and then letting manifold sql query engine process the wkt
				 */
				UseBinaryGeom: false,
				
				/*
				 * {String}
				 * Query used to retrieve the data
				 */
				Query: 'select cast(hectares as nvarchar(max)) + \' ha\' as [l], [Geometry].STAsText() as [g] from dbo.velden where Geometry::STGeomFromText(\'POLYGON(({l} {b},{l} {t},{r} {t}, {r} {b}, {l} {b}))\', 28992).STIntersects([Geometry]) = 1;'
				/*
				 * SqlServer binary geom query example:
				 * 'select hectares as [l], [Geometry].STAsBinary() as [g] from dbo.velden where Geometry::STGeomFromText(\'POLYGON(({l} {b},{l} {t},{r} {t}, {r} {b}, {l} {b}))\', 28992).STIntersects([Geometry]) = 1;'
				 *
				 * Postgis examples (wkt & binary:
				 * 'select cast(hectares as decimal(10,2)) || \' ha\' as "l", st_astext(geometry) as g from public.velden where \'BOX({l} {b},{r} {t})\'::box2d && "geometry"'
				 * 'select hectares as "l", st_asbinary(geometry) as g from public.velden where \'BOX({l} {b},{r} {t})\'::box2d && "geometry"'
				 */
			}
		],
		
		/*
		 * {Cartomatic.Wms.WmsServiceDescription}
		 * The base WmsServiceDescription object; when used it overwrites the one passed through a WmsDriver constructor
		 * Overwrite is done per property, so this object can declare only the properties that need to be overwritten and the rest can be
		 * provided through the WmsDriver constructor
		 */
		WmsServiceDescription: {
			/*
			 * {String}
			 */
			Title: 'Here goes WMS title',
			
			/*
			 * {String}
			 */
			Abstract: 'Here goes abstract',
			
			/*
			 * {String[]}
			 */
			Keywords: ['Keyword 1', 'Keyword 2', 'Keyword 3'],
			
			/*
			 * {String}
			 */
			ContactPerson: 'Here goes contact person',
			
			/*
			 * {String}
			 */
			ContactOrganization: 'Here goes contact organisation',
			
			/*
			 * {String}
			 */
			ContactPosition: 'Here goes contact position',
			
			/*
			 * {String}
			 */
			AddressType: 'postal',
			
			/*
			 * {String}
			 */
			Address: 'Here goes address',
			
			/*
			 * {String}
			 */
			City: 'Here goes city',
			
			/*
			 * {String}
			 */
			StateOrProvince: 'Here goes state or province',
			
			/*
			 * {String}
			 */
			PostCode: 'Here goes post code',
			
			/*
			 * {String}
			 */
			Country: 'Here goes country',
			
			/*
			 * {String}
			 */
			ContactVoiceTelephone: 'Here goes contact voice telephone',
			
			/*
			 * {String}
			 */
			ContactElectronicMailAddress: 'Here goes email',
			
			/*
			 * {String}
			 */
			AccessConstraints: 'none',
			
			/*
			 * {String}
			 */
			Fees: 'none',
			
			/*
			 * {Int}
			 */
			MaxHeight: 2048,
			
			/*
			 * {Int}
			 */
			MaxWidth: 2048,
			
			/*
			 * {Int}
			 */
			LayerLimit: 0
		}
	}
]